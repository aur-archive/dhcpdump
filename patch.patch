--- dhcpdump.c.orig	2008-06-24 05:26:52.000000000 +0200
+++ dhcpdump.c	2013-11-05 18:30:54.205158865 +0100
@@ -16,12 +16,14 @@
 #include <netinet/in.h>
 #include <netinet/ip.h>
 #include <netinet/udp.h>
+#include <netinet/ether.h>
 #include <arpa/inet.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 #include <ctype.h>
 #include <pcap.h>
+#include <time.h>
 #include <err.h>
 #include <regex.h>
 #include "dhcp_options.h"
@@ -38,11 +40,11 @@
 #define LARGESTRING 1024
 
 // header variables
-u_char	timestamp[40];			// timestamp on header
-u_char	mac_origin[40];			// mac address of origin
-u_char	mac_destination[40];		// mac address of destination
-u_char	ip_origin[40];			// ip address of origin
-u_char	ip_destination[40];		// ip address of destination
+u_char	timestamp[80];			// timestamp on header
+u_char	mac_origin[80];			// mac address of origin
+u_char	mac_destination[80];		// mac address of destination
+u_char	ip_origin[80];			// ip address of origin
+u_char	ip_destination[80];		// ip address of destination
 int	max_data_len;			// maximum size of a packet
 
 int	tcpdump_style = -1;
@@ -163,10 +165,10 @@
 	strcpy(ip_origin, (u_char *)inet_ntoa(ip->ip_src));
 	strcpy(ip_destination, (u_char *)inet_ntoa(ip->ip_dst));
 
-	if (hmask && check_ch((u_char *)(sp + offset), ntohs(udp->uh_ulen)))
+	if (hmask && check_ch((u_char *)(sp + offset), ntohs(udp->len)))
 		return;
 
-	printdata((u_char *)(sp + offset), ntohs(udp->uh_ulen));
+	printdata((u_char *)(sp + offset), ntohs(udp->len));
 }
 
 // check for matching CHADDR (Peter Apian-Bennewitz <apian@ise.fhg.de>)
